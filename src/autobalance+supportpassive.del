import "boss_stats.del";

playervar define SupportPassiveTimer;

rule: "Autobalance"
Event.OngoingPlayer
Team.Team2
if (SlotOf(EventPlayer()) != 0)
if (IsDummyBot(EventPlayer()) != true)
{
    if (PlayersInSlot(0, Team.Team2) == 0)
    {
        MovePlayerToTeam(EventPlayer(), Team.Team2, 0);
    }
    else if (NumberOfPlayers(Team.Team1) < NumberOfSlots(Team.Team1))
    {
        MovePlayerToTeam(EventPlayer(), Team.Team1, -1);
    }
    else
    {
        RemovePlayer(EventPlayer());
    }
    Wait(0.1, WaitBehavior.IgnoreCondition);
    LoopIfConditionIsTrue();
}

rule: "Autostart"
if (IsGameInProgress() != true)
if (NumberOfPlayers(Team.Team1) == NumberOfSlots(Team.Team1) == true)
if (PlayersInSlot(0, Team.Team2) != 0)
{
    StartGameMode();
}

rule: "Quick Setup"
Event.OngoingPlayer
if (IsAssemblingHeroes() == true)
{
    SetMatchTime(5);
    WaitUntil(IsInSetup(), 99999);
    if (IsTeamOnDefense(TeamOf(EventPlayer())) == true)
    {
        SetMatchTime(20);
        while (IsInSetup())
        {
            MinWait();
            SetMoveSpeed(EventPlayer(), 250);
        }
        SetMoveSpeed(AllPlayers(Team.All), 100);
        SetMoveSpeed(PlayersInSlot(0, Team.Team2), PlayersInSlot(0, Team.Team2).bossStats.moveSpeed);
    }
    else if (IsTrueForAll([IsTeamOnOffense(Team.Team1), IsTeamOnOffense(Team.Team2)], true))
    {
        SetMatchTime(10);
    }
}

rule: "If Player Takes Damage, Set SupportPassiveTimer to 2"
Event.OnDamageTaken
Team.Team2
if (ArrayContains(AllSupportHeroes(), HeroOf(EventPlayer())) == true)
if (HeroOf(EventPlayer()) != Hero.Zenyatta)
{
    Wait(0.016, WaitBehavior.AbortWhenFalse);
    SupportPassiveTimer = 2;
}

rule: "Support Passive Disabled"
Event.OngoingPlayer
Team.Team2
if (SupportPassiveTimer == 1)
{
    Wait(1.3, WaitBehavior.AbortWhenFalse);
    Damage(EventPlayer(), null, 100 / bossStats.damageReceived);
    Heal(EventPlayer(), null, 100 / bossStats.healingReceived);
    SupportPassiveTimer = 2;
}

rule: "If Support Passive Timer = 2, set to 1"
Event.OngoingPlayer
Team.Team2
if (SupportPassiveTimer == 2)
{
    Wait(0.1, WaitBehavior.AbortWhenFalse);
    SupportPassiveTimer = 1;
}

rule: "If full health, stop timer"
Event.OngoingPlayer
Team.Team2
if (NormalizedHealth(EventPlayer()) == 1)
if (SupportPassiveTimer != 0)
{
    SupportPassiveTimer = 0;
}

